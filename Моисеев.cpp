#include <iostream>
#include <string>

using namespace std;

void Print(int start, int end, string input) {  // печать подходящей цепочки
	cout << start + 1 << ": ";
	for (; start <= end; start++) {
		cout << input[start];
	}
	cout << endl;
}

enum q {   // состояния 
	q0,
	q1,
	q2,
	q3,
	q4
};

int main()
{
	setlocale(LC_ALL, "Russian");
	string input;                     // строка с входными данными
	cin >> input;					  // ввод строки
	char q = q0;                      // задаём начальное состояние
	int k = 0, pos;                   // k - позиция первоого  элемента подходящей последовательности
	int number = 0;                   // кол-во последовательностей, удовлетворяющих условию 
	int size = input.size();          // размер строки
	int i = input.find("*", pos = 0); // находим первое вхождение элемента *
	if ((i != -1) && (i < size - 2)) {// проверяем, есть ли элемент * (начало подходящей последовательности)
		for (; i < size; i++) {       // проход по всем элементам, начиная с первой *.
			switch (q) {
			case q0:                  // состояние q0, если находим * преходим в q1 и зпоминаем			
				if (input[i] == '*')  //позицию элемента, если не найдено, остаёмся в q0.
				{					
					k = i;
					q = q1;				
				}
				break;					// для выхода из switch и перехода к следующему(input[i+1] элементу
			case q1:				   // состояние q1, если находим * преходим в q2,
				if (input[i] == '*')   // если не найдено, идём снова в q0.
					q = q2;
				else
					q = q0;
				break;
			case q2:					// состояние q2
				if (input[i] == '*')
					q = q4;
				else if (input[i] == 'b')
					q = q3;
				else
					q = q0;
				break;
			case q3:				   // состояние q3
				if (input[i] == '*')
					q = q4;
				else if (input[i] == 'b' || input[i] == '!')
					q = q3;
				else
					q = q0;
				break;
			case q4:					// состояние q4, если находим 'a' возвращаемся в q2 (.....*a)
				if (input[i] == 'a' && (i != size - 1))
					q = q2;
				else
				{
					number += 1;             // увеличиваем счётчик подходящих цепочек    					  
					Print(k, i-1, input);    // печатаем подходящую последовательность и возвращаемся в q1				
					if (input[i - 2] == '*') // если предыдущие 2 элемента '*' возвращаемся в q2. 
					{						 //Это может быть началом новой цепочки. (**)
						q = q2;
						k = i-2;
					}
					else                   // предыдущий элемент '*' может быть началом новой цепочки -> 
					{                      // возвращаемся в q1
						q = q1;
						k = i - 1;
					}
					i--;
				}
				break;}		
		}
		if (q == q4) {                  // печатаем подходящую последовательность (начиная с k), 							    	//если она находилась в конце строки
			number += 1;			    // увеличиваем счётчик подходящих цепочек 
			Print(k, size, input);
		}

	}
	if (number == 0) 			// если подходящие цепочки не найдены (счётчик = 0)
		cout << "цепочек не найдено";
		
}


