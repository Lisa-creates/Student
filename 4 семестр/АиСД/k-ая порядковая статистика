#include <fstream> 

#include <fstream>

using namespace std;

void find(int* a, int l, int r, int k1, int k2) {
	int pi = l + (r - l) / 2, middle = a[pi], i = l, j = r;
	while (i < j) {
		while (a[i] < middle) 
			++i;
		while (middle < a[j])
			--j;
		if (i < j) {
			swap(a[i], a[j]);
			++i;
			--j;
		}
		else if (i==j)
		{
			++i;
			--j;
		} 
	}
	if (k1 <= j && k2 > j) {
		if (i < r)
			find(a, i, r, i, k2);
		if (j > l)
			find(a, l, j, k1, j);
	}
	if (k2 <= j && l < j) 
		find(a, l, j, k1,k2);
	if (k1 > j && i < r)
		find(a, i, r, k1, k2);
}

int main(int argc, char* argv[]){
  if (argc<3) {
    return 1;
  }

  std::ifstream inFile(argv[1]);
  if (!inFile){
    return 2;
  }

  std::ofstream outFile(argv[2]);
  if (!outFile){
    return 3;
  }
  
  /*
    Код вашей программы
  */
  
  	int n, k1, k2, A, B, C;
	inFile >> n >> k1 >> k2;
	int* a = new int[n];
	inFile >> A >> B >> C >> a[0] >> a[1];
	for (int i = 2; i < n; i++) {
		a[i] = A * a[i - 2] + B * a[i - 1] + C;
	}
	find(a, 0, n-1, k1-1, k2-1);
	for (int i = k1 - 1; i < k2; i++) { 
		if (i == k2 - 1)
			outFile << a[i];
		else
			outFile << a[i] << ' ';
	}
	delete[] a;
  inFile.close();
  outFile.close();
  return 0;
} 
